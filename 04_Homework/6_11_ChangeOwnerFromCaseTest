@isTest
private class ChangeOwnerFromCaseTest {
 @TestVisible static List<Case> createCases(Integer amount) {
  List<Case> newCases = new List<Case>();
  for (Integer i = 0; i < amount; i++) {
   Case newCase = new Case(
    Origin = 'Phone'
   );
   newCases.add(newCase);
  }
  System.debug(newCases.size() + ' case(s) created');
  return newCases;
 }

 @TestVisible static List<Contact> createContacts(Integer amount) {
  List<Contact> newContacts = new List<Contact>();
  for (Integer i = 0; i < amount; i++) {
   Contact newContact = new Contact(
    LastName = 'Contact' + i
   );
   newContacts.add(newContact);
  }
  System.debug(newContacts.size() + ' contacts(s) created');
  return newContacts;
 }

 @TestVisible static List<Account> createAccounts(Integer amount) {
  List<Account> newAccounts = new List<Account>();
  for (Integer i = 0; i < amount; i++) {
   Account newAccount = new Account(
    Name = 'AccountName' + i
   );
   newAccounts.add(newAccount);
  }
  System.debug(newAccounts.size() + ' account(s) created');
  return newAccounts;
 }

 @isTest static void caseWithoutInfo() {
  List<Case> newCases = new List<Case>();
  newCases = ChangeOwnerFromCaseTest.createCases(1);
  Case newCase = newCases.get(0);
  
  User userOwner = [SELECT Id FROM User WHERE IsActive = true LIMIT 1];
  System.System.debug('userOwner.Id: ' + userOwner.Id);
  newCase.OwnerId = userOwner.Id;
  
  insert newCase;

  System.assertEquals(null, newCase.AccountId);
  System.assertEquals(null, newCase.ContactId);
 }

 @isTest static void caseWithContact() {
  List<Case> newCases = new List<Case>();
  newCases = ChangeOwnerFromCaseTest.createCases(1);
  Case newCase = newCases.get(0);

  List<Contact> newContacts = new List<Contact>();
  newContacts = ChangeOwnerFromCaseTest.createContacts(1);
  Contact newContact = newContacts.get(0);
  insert newContact;

  newCase.ContactId  = newContact.Id;
  User userOwner = [SELECT Id FROM User WHERE IsActive = true LIMIT 1];
  System.System.debug('userOwner.Id: ' + userOwner.Id);
  newCase.OwnerId = userOwner.Id;
  insert newCase;

  Case updatedCase       = [SELECT CreatedById
                              FROM Case
                             WHERE Id = :newCase.Id];

  Contact updatedContact = [SELECT OwnerId
                              FROM Contact
                             WHERE Id = :newCase.ContactId];

  System.assertEquals(updatedCase.CreatedById, updatedContact.OwnerId);
 }

 @isTest static void caseWithAccount() {
  List<Case> newCases = new List<Case>();
  newCases = ChangeOwnerFromCaseTest.createCases(1);
  Case newCase = newCases.get(0);
  
  List<Account> newAccounts = new List<Account>();
  newAccounts = ChangeOwnerFromCaseTest.createAccounts(1);
  Account newAccount = newAccounts.get(0);
  insert newAccount;

  newCase.AccountId  = newAccount.Id;
  User userOwner = [SELECT Id FROM User WHERE IsActive = true LIMIT 1];
  System.System.debug('userOwner.Id: ' + userOwner.Id);
  newCase.OwnerId = userOwner.Id;
  insert newCase;

  Case updatedCase       = [SELECT CreatedById
                              FROM Case
                             WHERE Id = :newCase.Id];

  Account updatedAccount = [SELECT OwnerId
                              FROM Account
                             WHERE Id = :newCase.AccountId];

  System.assertEquals(updatedCase.CreatedById, updatedAccount.OwnerId);
 }

 @isTest static void caseBothContactAndAccount() {
  List<Case> newCases = new List<Case>();
  newCases = ChangeOwnerFromCaseTest.createCases(1);
  Case newCase = newCases.get(0);
  
  List<Contact> newContacts = new List<Contact>();
  newContacts = ChangeOwnerFromCaseTest.createContacts(1);
  Contact newContact = newContacts.get(0);
  insert newContact;

  List<Account> newAccounts = new List<Account>();
  newAccounts = ChangeOwnerFromCaseTest.createAccounts(1);
  Account newAccount = newAccounts.get(0);
  insert newAccount;

  newCase.ContactId  = newContact.Id;
  newCase.AccountId  = newAccount.Id;

  User userOwner = [SELECT Id FROM User WHERE IsActive = true LIMIT 1];
  System.System.debug('userOwner.Id: ' + userOwner.Id);
  newCase.OwnerId = userOwner.Id;
  insert newCase;
  System.debug('Case.Id: ' + newCase.Id + ', Contact: ' + newCase.ContactId + ', Account: ' + newCase.AccountId);

  Case updatedCase       = [SELECT CreatedById
                              FROM Case
                             WHERE Id = :newCase.Id];

  Contact updatedContact = [SELECT OwnerId
                              FROM Contact
                             WHERE Id = :newCase.ContactId];

  Account updatedAccount = [SELECT OwnerId
                              FROM Account
                             WHERE Id = :newCase.AccountId];

  System.assertEquals(updatedCase.CreatedById, updatedContact.OwnerId);
  System.assertEquals(updatedCase.CreatedById, updatedAccount.OwnerId);
 }
}