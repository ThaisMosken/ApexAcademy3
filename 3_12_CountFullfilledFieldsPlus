trigger CountFullfilledFields on Lead (after insert) {

    List<Lead> leadsToUpdate = new List<Lead>();

    for(Lead newLead : Trigger.new) {

        if (newLead.Bypass_Triggers__c == true) {
            break;
        }

        List<String> keyFields = new List<String>();
        List<String> populatedFields = new List<String>();
        List<String> fieldsLabels = new List<String>();
        List<String> populatedFieldsLabels = new List<String>();
        List<String> populatedWithTestLabels = new List<String>();
        Integer countPopulatedFields = 0;

        //Considered fields
        String FirstName = newLead.FirstName;
        String LastName  = newLead.LastName;
        String Email     = newLead.Email;
        String Phone     = newLead.Phone;
        String Website   = newLead.Website;
        String Title     = newLead.Title;

        //Add fields to list
        keyFields.add(FirstName);
        keyFields.add(LastName);
        keyFields.add(Email);
        keyFields.add(Phone);
        keyFields.add(Website);
        keyFields.add(Title);

        //Create list with labels
        fieldsLabels.add(Lead.FirstName.getDescribe().getLabel());
        fieldsLabels.add(Lead.LastName.getDescribe().getLabel());
        fieldsLabels.add(Lead.Email.getDescribe().getLabel());
        fieldsLabels.add(Lead.Phone.getDescribe().getLabel());
        fieldsLabels.add(Lead.Website.getDescribe().getLabel());
        fieldsLabels.add(Lead.Title.getDescribe().getLabel());

        //Count populated key fields
        for (Integer i = 0; i < keyFields.size(); i++) {
            if (keyFields.get(i) != null) {
                populatedFields.add(keyFields.get(i));
                populatedFieldsLabels.add(fieldsLabels.get(i));

                //Create list of fields populated with 'test'
                if(keyFields.get(i).equalsIgnoreCase('test')) {
                    populatedWithTestLabels.add(fieldsLabels.get(i));
                }               
            }
        }

        countPopulatedFields = populatedFields.size();
        System.debug('For Lead ' + newLead.Id + ', countPopulatedFields = ' + countPopulatedFields);

        //Prepare lists to update out of the Trigger.new
        leadsToUpdate.add(
            new Lead(
                Id                      = newLead.Id,
                Key_Fields_Populated__c = countPopulatedFields
            )
        );

        //If 3 or more fields populated, create task
        if (countPopulatedFields >= 3) {
            
            List<Task> tasksToCreate = new List<Task>();

            for (Integer i = 0; i < countPopulatedFields; i++) {
                Task newTask = new Task();

                newTask.WhoId   = newLead.Id;
                newTask.Subject = 'Verify the ' + populatedFieldsLabels.get(i) + ' field';

                tasksToCreate.add(newTask);
            }

            insert tasksToCreate;
        }

        //If there is any field with the exact keywork 'test', create a warning task
        if (populatedWithTestLabels.size() > 0) {

            String concatenatedTestLabels = populatedWithTestLabels.get(0);

            //Create concatenated string with all fields
            for(Integer i = 1; i < populatedWithTestLabels.size(); i++) {
                concatenatedTestLabels = concatenatedTestLabels + ', ' + populatedWithTestLabels.get(i);
            }

            Task newWarningTask = new Task();

            newWarningTask.WhoId        = newLead.Id;
            newWarningTask.Subject      = 'WARNING';
            newWarningTask.Description = 'This Lead contains the TEST keyword in the following key fields: ' + concatenatedTestLabels;
            
            insert newWarningTask;
        }
    }

    update leadsToUpdate;
}